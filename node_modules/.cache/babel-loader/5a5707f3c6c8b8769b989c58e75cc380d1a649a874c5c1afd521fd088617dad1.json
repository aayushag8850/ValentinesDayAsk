{"ast":null,"code":"var _jsxFileName = \"/Users/aayushagarwal/Valentines Day Puzzle/valentine-quest/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizData = [{\n  question: 'What was one of the topics we talked about when we first got introduced?',\n  options: ['the football team', 'a hindi movie', 'the weather'],\n  correct: 'a hindi movie'\n}, {\n  question: 'Which snack do I always steal from you?',\n  options: ['chips', 'fries', 'icecream', 'all of the above'],\n  correct: 'all of the above'\n}, {\n  question: 'How did we greet each other in the beginning?',\n  options: ['handshake', 'hug', 'kiss'],\n  correct: 'handshake'\n}, {\n  question: 'How many dates before we kissed?',\n  options: ['1', '2', '3'],\n  correct: '3'\n}, {\n  question: 'Who made the first move?',\n  options: ['Aayush', 'Saumya'],\n  correct: 'cafe'\n}];\nconst Quiz = ({\n  onComplete\n}) => {\n  _s();\n  // We’ll store user answers in this array\n  const [answers, setAnswers] = useState(Array(quizData.length).fill(''));\n  const [feedback, setFeedback] = useState('');\n  const handleOptionChange = (qIndex, value) => {\n    const newAnswers = [...answers];\n    newAnswers[qIndex] = value;\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = () => {\n    let score = 0;\n    quizData.forEach((q, idx) => {\n      if (answers[idx] === q.correct) {\n        score++;\n      }\n    });\n    if (score === quizData.length) {\n      setFeedback('You got them all correct! ♥');\n      setTimeout(() => {\n        onComplete();\n      }, 1000);\n    } else {\n      setFeedback(`You got ${score} out of ${quizData.length}. Try again!`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Relationship Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), quizData.map((item, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [qIndex + 1, \") \", item.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), item.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"quiz-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question${qIndex}`,\n          value: option,\n          checked: answers[qIndex] === option,\n          onChange: () => handleOptionChange(qIndex, option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))]\n    }, qIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"cINMZCyqimMXY5v9WXYXeL/6aXA=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","quizData","question","options","correct","Quiz","onComplete","_s","answers","setAnswers","Array","length","fill","feedback","setFeedback","handleOptionChange","qIndex","value","newAnswers","handleSubmit","score","forEach","q","idx","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","option","type","name","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/aayushagarwal/Valentines Day Puzzle/valentine-quest/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Quiz.css';\n\nconst quizData = [\n  {\n    question: 'What was one of the topics we talked about when we first got introduced?',\n    options: ['the football team', 'a hindi movie', 'the weather'],\n    correct: 'a hindi movie',\n  },\n  {\n    question: 'Which snack do I always steal from you?',\n    options: ['chips', 'fries', 'icecream', 'all of the above'],\n    correct: 'all of the above',\n  },\n  {\n    question: 'How did we greet each other in the beginning?',\n    options: ['handshake', 'hug', 'kiss'],\n    correct: 'handshake',\n  },\n  {\n    question: 'How many dates before we kissed?',\n    options: ['1', '2', '3'],\n    correct: '3',\n  },\n  {\n    question: 'Who made the first move?',\n    options: ['Aayush', 'Saumya'],\n    correct: 'cafe',\n  },\n\n];\n\nconst Quiz = ({ onComplete }) => {\n  // We’ll store user answers in this array\n  const [answers, setAnswers] = useState(Array(quizData.length).fill(''));\n\n  const [feedback, setFeedback] = useState('');\n\n  const handleOptionChange = (qIndex, value) => {\n    const newAnswers = [...answers];\n    newAnswers[qIndex] = value;\n    setAnswers(newAnswers);\n  };\n\n  const handleSubmit = () => {\n    let score = 0;\n    quizData.forEach((q, idx) => {\n      if (answers[idx] === q.correct) {\n        score++;\n      }\n    });\n    if (score === quizData.length) {\n      setFeedback('You got them all correct! ♥');\n      setTimeout(() => {\n        onComplete();\n      }, 1000);\n    } else {\n      setFeedback(`You got ${score} out of ${quizData.length}. Try again!`);\n    }\n  };\n\n  return (\n    <div className=\"quiz-section\">\n      <h2>Relationship Quiz</h2>\n      {quizData.map((item, qIndex) => (\n        <div key={qIndex} className=\"quiz-question\">\n          <p><strong>{qIndex + 1}) {item.question}</strong></p>\n          {item.options.map((option) => (\n            <label key={option} className=\"quiz-option\">\n              <input\n                type=\"radio\"\n                name={`question${qIndex}`}\n                value={option}\n                checked={answers[qIndex] === option}\n                onChange={() => handleOptionChange(qIndex, option)}\n              />\n              {option}\n            </label>\n          ))}\n        </div>\n      ))}\n\n      <button onClick={handleSubmit}>Submit Quiz</button>\n      <p className=\"feedback\">{feedback}</p>\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}