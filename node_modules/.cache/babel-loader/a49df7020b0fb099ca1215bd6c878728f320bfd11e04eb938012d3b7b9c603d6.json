{"ast":null,"code":"var _jsxFileName = \"/Users/aayushagarwal/Valentines Day Puzzle/valentine-quest/src/components/Trivia.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoveQuiz({\n  onComplete\n}) {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const questions = [{\n    question: \"Where did we meet?\",\n    options: [\"Cafe\", \"Park\", \"Library\", \"Online\"],\n    answer: \"Cafe\"\n  }, {\n    question: \"What is my favorite dessert?\",\n    options: [\"Cake\", \"Ice Cream\", \"Pie\", \"Brownie\"],\n    answer: \"Cake\"\n  }\n  // Add more questions as desired\n  ];\n  const handleAnswer = selectedOption => {\n    // Optionally, provide feedback here.\n    // For simplicity, move to the next question.\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      // Quiz complete; move to next stage.\n      onComplete();\n    }\n  };\n  const {\n    question,\n    options\n  } = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"The Love Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswer(option),\n      style: {\n        margin: '5px'\n      },\n      children: option\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(LoveQuiz, \"9OM438k1WhEIHDwFF7YsuyU6VEk=\");\n_c = LoveQuiz;\nexport default LoveQuiz;\nvar _c;\n$RefreshReg$(_c, \"LoveQuiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoveQuiz","onComplete","_s","currentQuestion","setCurrentQuestion","questions","question","options","answer","handleAnswer","selectedOption","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","style","margin","_c","$RefreshReg$"],"sources":["/Users/aayushagarwal/Valentines Day Puzzle/valentine-quest/src/components/Trivia.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction LoveQuiz({ onComplete }) {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const questions = [\n    { question: \"Where did we meet?\", options: [\"Cafe\", \"Park\", \"Library\", \"Online\"], answer: \"Cafe\" },\n    { question: \"What is my favorite dessert?\", options: [\"Cake\", \"Ice Cream\", \"Pie\", \"Brownie\"], answer: \"Cake\" },\n    // Add more questions as desired\n  ];\n\n  const handleAnswer = (selectedOption) => {\n    // Optionally, provide feedback here.\n    // For simplicity, move to the next question.\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      // Quiz complete; move to next stage.\n      onComplete();\n    }\n  };\n\n  const { question, options } = questions[currentQuestion];\n\n  return (\n    <div>\n      <h2>The Love Quiz</h2>\n      <p>{question}</p>\n      {options.map((option, index) => (\n        <button key={index} onClick={() => handleAnswer(option)} style={{ margin: '5px' }}>\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default LoveQuiz;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAMQ,SAAS,GAAG,CAChB;IAAEC,QAAQ,EAAE,oBAAoB;IAAEC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC;IAAEC,MAAM,EAAE;EAAO,CAAC,EAClG;IAAEF,QAAQ,EAAE,8BAA8B;IAAEC,OAAO,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,CAAC;IAAEC,MAAM,EAAE;EAAO;EAC7G;EAAA,CACD;EAED,MAAMC,YAAY,GAAIC,cAAc,IAAK;IACvC;IACA;IACA,IAAIP,eAAe,GAAG,CAAC,GAAGE,SAAS,CAACM,MAAM,EAAE;MAC1CP,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;IACzC,CAAC,MAAM;MACL;MACAF,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,MAAM;IAAEK,QAAQ;IAAEC;EAAQ,CAAC,GAAGF,SAAS,CAACF,eAAe,CAAC;EAExD,oBACEJ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAAa,QAAA,EAAIN;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBT,OAAO,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBpB,OAAA;MAAoBqB,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACS,MAAM,CAAE;MAACG,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAM,CAAE;MAAAV,QAAA,EAC/EM;IAAM,GADIC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACd,EAAA,CAhCQF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}