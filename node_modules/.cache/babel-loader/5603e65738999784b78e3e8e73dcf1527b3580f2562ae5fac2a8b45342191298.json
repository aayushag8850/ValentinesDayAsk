{"ast":null,"code":"var _jsxFileName = \"/Users/aayushagarwal/Valentines Day Puzzle/valentine-quest/src/components/Crossword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Crossword.css'; // specific crossword styling\n\n// Each row is an array of letters\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CROSSWORD_ANSWERS = [['C', 'A', 'N', 'D', 'Y'],\n// Row 0\n['R', 'O', 'S', 'E', 'S'] // Row 1\n];\nconst Crossword = ({\n  onComplete\n}) => {\n  _s();\n  // Initialize user input state as a 2D array of empty strings\n  const [userGrid, setUserGrid] = useState([['', '', '', '', ''], ['', '', '', '', '']]);\n  const [feedback, setFeedback] = useState('');\n\n  // Update user input in the grid\n  const handleChange = (row, col, value) => {\n    // Convert to uppercase and limit to 1 character\n    const uppercaseValue = value.toUpperCase().slice(0, 1);\n    const newGrid = [...userGrid.map(r => [...r])];\n    newGrid[row][col] = uppercaseValue;\n    setUserGrid(newGrid);\n  };\n\n  // Check if the user’s inputs match the answers\n  const checkCrossword = () => {\n    let isCorrect = true;\n    for (let r = 0; r < CROSSWORD_ANSWERS.length; r++) {\n      for (let c = 0; c < CROSSWORD_ANSWERS[r].length; c++) {\n        if (userGrid[r][c] !== CROSSWORD_ANSWERS[r][c]) {\n          isCorrect = false;\n          break;\n        }\n      }\n    }\n    if (isCorrect) {\n      setFeedback('Correct! On to the quiz...');\n      // Move to the next puzzle after a short delay\n      setTimeout(() => {\n        onComplete();\n      }, 1000);\n    } else {\n      setFeedback('Not quite right. Try again!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crossword-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crossword Puzzle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Clues:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"1 Across:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }, this), \" A sweet treat often given on Valentine\\u2019s Day\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"2 Across:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this), \" Classic Valentine\\u2019s flowers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crossword-grid\",\n      children: userGrid.map((rowArr, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crossword-row\",\n        children: rowArr.map((cellVal, col) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crossword-cell\",\n          children: [row === 0 && col === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cell-label\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 46\n          }, this), row === 1 && col === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cell-label\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"crossword-input\",\n            type: \"text\",\n            value: cellVal,\n            onChange: e => handleChange(row, col, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, `cell-${row}-${col}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, `row-${row}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkCrossword,\n      children: \"Check Crossword\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Crossword, \"R8TPhmG4Y/ZRgWr4vWudNDT4jH8=\");\n_c = Crossword;\nexport default Crossword;\nvar _c;\n$RefreshReg$(_c, \"Crossword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CROSSWORD_ANSWERS","Crossword","onComplete","_s","userGrid","setUserGrid","feedback","setFeedback","handleChange","row","col","value","uppercaseValue","toUpperCase","slice","newGrid","map","r","checkCrossword","isCorrect","length","c","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rowArr","cellVal","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/aayushagarwal/Valentines Day Puzzle/valentine-quest/src/components/Crossword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Crossword.css'; // specific crossword styling\n\n// Each row is an array of letters\nconst CROSSWORD_ANSWERS = [\n  ['C', 'A', 'N', 'D', 'Y'], // Row 0\n  ['R', 'O', 'S', 'E', 'S'], // Row 1\n];\n\nconst Crossword = ({ onComplete }) => {\n  // Initialize user input state as a 2D array of empty strings\n  const [userGrid, setUserGrid] = useState([\n    ['', '', '', '', ''],\n    ['', '', '', '', ''],\n  ]);\n  const [feedback, setFeedback] = useState('');\n\n  // Update user input in the grid\n  const handleChange = (row, col, value) => {\n    // Convert to uppercase and limit to 1 character\n    const uppercaseValue = value.toUpperCase().slice(0, 1);\n\n    const newGrid = [...userGrid.map((r) => [...r])];\n    newGrid[row][col] = uppercaseValue;\n    setUserGrid(newGrid);\n  };\n\n  // Check if the user’s inputs match the answers\n  const checkCrossword = () => {\n    let isCorrect = true;\n    for (let r = 0; r < CROSSWORD_ANSWERS.length; r++) {\n      for (let c = 0; c < CROSSWORD_ANSWERS[r].length; c++) {\n        if (userGrid[r][c] !== CROSSWORD_ANSWERS[r][c]) {\n          isCorrect = false;\n          break;\n        }\n      }\n    }\n    if (isCorrect) {\n      setFeedback('Correct! On to the quiz...');\n      // Move to the next puzzle after a short delay\n      setTimeout(() => {\n        onComplete();\n      }, 1000);\n    } else {\n      setFeedback('Not quite right. Try again!');\n    }\n  };\n\n  return (\n    <div className=\"crossword-section\">\n      <h2>Crossword Puzzle</h2>\n      <p><strong>Clues:</strong></p>\n      <p><strong>1 Across:</strong> A sweet treat often given on Valentine’s Day</p>\n      <p><strong>2 Across:</strong> Classic Valentine’s flowers</p>\n\n      <div className=\"crossword-grid\">\n        {userGrid.map((rowArr, row) => (\n          <div key={`row-${row}`} className=\"crossword-row\">\n            {rowArr.map((cellVal, col) => (\n              <div key={`cell-${row}-${col}`} className=\"crossword-cell\">\n                {(row === 0 && col === 0) && <span className=\"cell-label\">1</span>}\n                {(row === 1 && col === 0) && <span className=\"cell-label\">2</span>}\n                <input\n                  className=\"crossword-input\"\n                  type=\"text\"\n                  value={cellVal}\n                  onChange={(e) => handleChange(row, col, e.target.value)}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <button onClick={checkCrossword}>Check Crossword</button>\n      <p className=\"feedback\">{feedback}</p>\n    </div>\n  );\n};\n\nexport default Crossword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}